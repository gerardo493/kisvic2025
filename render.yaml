services:
  - type: web
    name: sistema-facturacion
    env: python
    buildCommand: |
      pip install -r requirements.txt
      mkdir -p uploads/capturas
      chmod 777 uploads/capturas
    startCommand: >-
      bash -lc '
      set -e
      set -x
      export APP_DIR=/opt/render/project/src
      mkdir -p "$APP_DIR/storage"
      cd "$APP_DIR"
      # Directorios de datos a persistir
      echo "[render-start] Preparando directorios de datos y symlinks"
      for d in uploads uploads/capturas facturas_pdf facturas_json cotizaciones_pdf cotizaciones_json reportes_clientes reportes_cuentas reportes_facturas reportes_generales reportes_pagos historial_clientes logs documentos_fiscales exportaciones_seniat listas_inventario static/uploads static/imagenes_productos imagenes_productos; do
        mkdir -p "storage/$d"
        # Si existe un directorio real en el repo y no es symlink
        if [ -d "$d" ] && [ ! -L "$d" ]; then
          # Si el destino en storage está vacío pero el repo tiene datos, migrarlos
          if { [ -z "$(ls -A storage/$d 2>/dev/null)" ] || [ "$FORCE_REPO_SYNC" = "1" ]; } && [ -n "$(ls -A $d 2>/dev/null)" ]; then
            echo "[render-start] Copiando contenido de $d -> storage/$d"
            cp -a "$d/." "storage/$d/" || true
          fi
          rm -rf "$d"
        fi
        ln -sfn "storage/$d" "$d"
      done

      # Archivos sueltos en la raíz que deben persistir
      echo "[render-start] Preparando archivos raíz a persistir"
      mkdir -p storage/_root
      for f in clientes.json inventario.json cuentas_por_cobrar.json ultima_tasa_bcv.json usuarios.json empresa.json bitacora.log; do
        if [ ! -e "storage/_root/$f" ] && [ -e "$f" ]; then
          echo "[render-start] Copiando $f -> storage/_root/$f"
          cp -a "$f" "storage/_root/$f" || true
        fi
        if [ "$FORCE_REPO_SYNC" = "1" ] && [ -e "$f" ]; then
          echo "[render-start] Forzando copia $f -> storage/_root/$f"
          cp -a "$f" "storage/_root/$f" || true
        fi
        # Reemplazar archivo real por symlink al storage
        if [ -e "$f" ] && [ ! -L "$f" ]; then
          rm -f "$f"
        fi
        ln -sfn "storage/_root/$f" "$f"
      done
      exec gunicorn app:app --workers 2 --threads 2 --timeout 180 --bind 0.0.0.0:$PORT
      '
    envVars:
      - key: PYTHON_VERSION
        value: 3.9.0
      - key: FLASK_ENV
        value: production
      - key: FLASK_APP
        value: app.py
      - key: SECRET_KEY
        sync: false
    healthCheckPath: /healthz
    autoDeploy: true 
    disk:
      name: data
      mountPath: /opt/render/project/src/storage
      sizeGB: 2
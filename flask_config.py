#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Configuraci√≥n autom√°tica de Flask para compatibilidad entre versiones.
Este archivo se importa en app.py para manejar autom√°ticamente las diferencias.
"""

import sys
import os

def setup_flask_environment():
    """Configura el entorno de Flask autom√°ticamente."""
    
    try:
        import flask
        flask_version = flask.__version__
        major_version = int(flask_version.split('.')[0])
        
        print(f"üîç Configurando Flask {flask_version}")
        
        # Configurar Markup seg√∫n la versi√≥n
        if major_version >= 3:
            # Flask 3.x: Markup est√° en flask.utils
            try:
                from flask.utils import Markup
                print("‚úÖ Markup importado desde flask.utils (Flask 3.x)")
                globals()['Markup'] = Markup
            except ImportError:
                # Fallback: usar MarkupSafe directamente
                try:
                    from markupsafe import Markup
                    print("‚úÖ Markup importado desde markupsafe (fallback)")
                    globals()['Markup'] = Markup
                except ImportError:
                    print("‚ùå Markup no disponible")
                    return False
        else:
            # Flask 2.x: Markup est√° en flask
            try:
                from flask import Markup
                print("‚úÖ Markup importado desde flask (Flask 2.x)")
                globals()['Markup'] = Markup
            except ImportError:
                # Fallback: usar MarkupSafe directamente
                try:
                    from markupsafe import Markup
                    print("‚úÖ Markup importado desde markupsafe (fallback)")
                    globals()['Markup'] = Markup
                except ImportError:
                    print("‚ùå Markup no disponible")
                    return False
        
        # Configurar CSRF seg√∫n la versi√≥n
        if major_version >= 3:
            try:
                from flask_wtf.csrf import CSRFProtect
                print("‚úÖ CSRFProtect importado (Flask 3.x)")
                globals()['CSRFProtect'] = CSRFProtect
            except ImportError:
                print("‚ö†Ô∏è CSRFProtect no disponible")
        else:
            try:
                from flask_wtf.csrf import CSRFProtect
                print("‚úÖ CSRFProtect importado (Flask 2.x)")
                globals()['CSRFProtect'] = CSRFProtect
            except ImportError:
                print("‚ö†Ô∏è CSRFProtect no disponible")
        
        print(f"‚úÖ Configuraci√≥n de Flask {flask_version} completada")
        return True
        
    except ImportError as e:
        print(f"‚ùå Error importando Flask: {e}")
        return False
    except Exception as e:
        print(f"‚ùå Error configurando Flask: {e}")
        return False

def get_flask_info():
    """Obtiene informaci√≥n detallada de Flask."""
    try:
        import flask
        return {
            'version': flask.__version__,
            'major': int(flask.__version__.split('.')[0]),
            'import_path': flask.__file__
        }
    except:
        return None

def safe_markup(text):
    """Crea Markup de manera segura."""
    try:
        if 'Markup' in globals():
            if text is None:
                return globals()['Markup']('')
            return globals()['Markup'](str(text))
        else:
            # Fallback: escapar HTML manualmente
            if text is None:
                return ''
            return str(text).replace('<', '&lt;').replace('>', '&gt;').replace('"', '&quot;').replace("'", '&#39;')
    except:
        # Fallback final
        if text is None:
            return ''
        return str(text)

# Configurar autom√°ticamente al importar
if __name__ == '__main__':
    print("üöÄ CONFIGURACI√ìN AUTOM√ÅTICA DE FLASK")
    print("="*50)
    
    if setup_flask_environment():
        info = get_flask_info()
        if info:
            print(f"üìä Informaci√≥n de Flask:")
            print(f"   Versi√≥n: {info['version']}")
            print(f"   Versi√≥n mayor: {info['major']}")
            print(f"   Ubicaci√≥n: {info['import_path']}")
        
        print("\n‚úÖ Configuraci√≥n completada exitosamente")
    else:
        print("\n‚ùå Error en la configuraci√≥n")
        sys.exit(1)
else:
    # Configurar autom√°ticamente al importar
    setup_flask_environment()
